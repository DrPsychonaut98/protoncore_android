public abstract interface class me/proton/core/featureflag/domain/FeatureFlagManager {
	public abstract fun get (Lme/proton/core/domain/entity/UserId;Lme/proton/core/featureflag/domain/entity/FeatureId;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun observe (Lme/proton/core/domain/entity/UserId;Lme/proton/core/featureflag/domain/entity/FeatureId;Z)Lkotlinx/coroutines/flow/Flow;
	public abstract fun prefetch (Lme/proton/core/domain/entity/UserId;Ljava/util/List;)V
}

public final class me/proton/core/featureflag/domain/FeatureFlagManager$DefaultImpls {
	public static synthetic fun get$default (Lme/proton/core/featureflag/domain/FeatureFlagManager;Lme/proton/core/domain/entity/UserId;Lme/proton/core/featureflag/domain/entity/FeatureId;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun observe$default (Lme/proton/core/featureflag/domain/FeatureFlagManager;Lme/proton/core/domain/entity/UserId;Lme/proton/core/featureflag/domain/entity/FeatureId;ZILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
}

public final class me/proton/core/featureflag/domain/entity/FeatureFlag {
	public fun <init> (Lme/proton/core/featureflag/domain/entity/FeatureId;ZLme/proton/core/domain/entity/UserId;ZZ)V
	public synthetic fun <init> (Lme/proton/core/featureflag/domain/entity/FeatureId;ZLme/proton/core/domain/entity/UserId;ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lme/proton/core/featureflag/domain/entity/FeatureId;
	public final fun component2 ()Z
	public final fun component3 ()Lme/proton/core/domain/entity/UserId;
	public final fun component4 ()Z
	public final fun component5 ()Z
	public final fun copy (Lme/proton/core/featureflag/domain/entity/FeatureId;ZLme/proton/core/domain/entity/UserId;ZZ)Lme/proton/core/featureflag/domain/entity/FeatureFlag;
	public static synthetic fun copy$default (Lme/proton/core/featureflag/domain/entity/FeatureFlag;Lme/proton/core/featureflag/domain/entity/FeatureId;ZLme/proton/core/domain/entity/UserId;ZZILjava/lang/Object;)Lme/proton/core/featureflag/domain/entity/FeatureFlag;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDefaultValue ()Z
	public final fun getFeatureId ()Lme/proton/core/featureflag/domain/entity/FeatureId;
	public final fun getUserId ()Lme/proton/core/domain/entity/UserId;
	public final fun getValue ()Z
	public fun hashCode ()I
	public final fun isGlobal ()Z
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/featureflag/domain/entity/FeatureId {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lme/proton/core/featureflag/domain/entity/FeatureId;
	public static synthetic fun copy$default (Lme/proton/core/featureflag/domain/entity/FeatureId;Ljava/lang/String;ILjava/lang/Object;)Lme/proton/core/featureflag/domain/entity/FeatureId;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class me/proton/core/featureflag/domain/repository/FeatureFlagLocalDataSource {
	public abstract fun observe (Lme/proton/core/domain/entity/UserId;Ljava/util/List;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun upsert (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class me/proton/core/featureflag/domain/repository/FeatureFlagRemoteDataSource {
	public abstract fun get (Lme/proton/core/domain/entity/UserId;Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class me/proton/core/featureflag/domain/repository/FeatureFlagRepository {
	public abstract fun get (Lme/proton/core/domain/entity/UserId;Ljava/util/List;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun get (Lme/proton/core/domain/entity/UserId;Lme/proton/core/featureflag/domain/entity/FeatureId;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun observe (Lme/proton/core/domain/entity/UserId;Ljava/util/List;Z)Lkotlinx/coroutines/flow/Flow;
	public abstract fun observe (Lme/proton/core/domain/entity/UserId;Lme/proton/core/featureflag/domain/entity/FeatureId;Z)Lkotlinx/coroutines/flow/Flow;
	public abstract fun prefetch (Lme/proton/core/domain/entity/UserId;Ljava/util/List;)V
}

public final class me/proton/core/featureflag/domain/repository/FeatureFlagRepository$DefaultImpls {
	public static synthetic fun get$default (Lme/proton/core/featureflag/domain/repository/FeatureFlagRepository;Lme/proton/core/domain/entity/UserId;Lme/proton/core/featureflag/domain/entity/FeatureId;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun observe$default (Lme/proton/core/featureflag/domain/repository/FeatureFlagRepository;Lme/proton/core/domain/entity/UserId;Lme/proton/core/featureflag/domain/entity/FeatureId;ZILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
}

public final class me/proton/core/featureflag/domain/usecase/FetchFeatureIdsRemote {
	public fun <init> (Lme/proton/core/featureflag/domain/repository/FeatureFlagRepository;)V
	public final fun invoke (Lme/proton/core/domain/entity/UserId;Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

