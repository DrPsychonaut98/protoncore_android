$dokka.format:html
$dokka.linkExtension:html
$dokka.location:me.proton.core.util.android.workmanager$deserialize(androidx.work.Data, kotlinx.serialization.DeserializationStrategy((me.proton.core.util.android.workmanager.deserialize.T)))me.proton.core.util.android.workmanager/androidx.work.-data/deserialize.html
$dokka.location:me.proton.core.util.android.workmanager$outputData(androidx.work.WorkInfo, kotlinx.serialization.DeserializationStrategy((me.proton.core.util.android.workmanager.outputData.T)))me.proton.core.util.android.workmanager/androidx.work.-work-info/output-data.html
$dokka.location:me.proton.core.util.android.workmanager$success(androidx.work.ListenableWorker, me.proton.core.util.android.workmanager.success.T)me.proton.core.util.android.workmanager/androidx.work.-listenable-worker/success.html
$dokka.location:me.proton.core.util.android.workmanager.activity$doOnSuccess(androidx.work.WorkRequest, androidx.fragment.app.FragmentActivity, androidx.work.WorkManager, kotlin.Function1((androidx.work.Data, kotlin.Unit)))me.proton.core.util.android.workmanager.activity/androidx.work.-work-request/do-on-success.html
$dokka.location:me.proton.core.util.android.workmanager.activity$doOnSuccess(androidx.work.WorkRequest, androidx.fragment.app.FragmentActivity, androidx.work.WorkManager, kotlin.Function1((me.proton.core.util.android.workmanager.activity.doOnSuccess.T, kotlin.Unit)))me.proton.core.util.android.workmanager.activity/androidx.work.-work-request/do-on-success.html
$dokka.location:me.proton.core.util.android.workmanager.activity$getWorkManager(androidx.fragment.app.FragmentActivity)me.proton.core.util.android.workmanager.activity/androidx.fragment.app.-fragment-activity/get-work-manager.html
$dokka.location:me.proton.core.util.android.workmanager.activity$observe(androidx.work.WorkRequest, androidx.fragment.app.FragmentActivity, androidx.work.WorkManager, kotlin.Function1((androidx.work.Data, kotlin.Unit)), kotlin.Function0((kotlin.Unit)), kotlin.Function1((androidx.work.WorkInfo.State, kotlin.Unit)))me.proton.core.util.android.workmanager.activity/androidx.work.-work-request/observe.html
$dokka.location:me.proton.core.util.android.workmanager.activity$observe(androidx.work.WorkRequest, androidx.fragment.app.FragmentActivity, androidx.work.WorkManager, kotlin.Function1((me.proton.core.util.android.workmanager.WorkRequestObserver, kotlin.Unit)))me.proton.core.util.android.workmanager.activity/androidx.work.-work-request/observe.html
$dokka.location:me.proton.core.util.android.workmanager.activity$observe(androidx.work.WorkRequest, androidx.fragment.app.FragmentActivity, androidx.work.WorkManager, kotlin.Function1((me.proton.core.util.android.workmanager.activity.observe.T, kotlin.Unit)), kotlin.Function0((kotlin.Unit)), kotlin.Function1((androidx.work.WorkInfo.State, kotlin.Unit)))me.proton.core.util.android.workmanager.activity/androidx.work.-work-request/observe.html
$dokka.location:me.proton.core.util.android.workmanager.activity$observeInfo(androidx.work.WorkRequest, androidx.fragment.app.FragmentActivity, androidx.work.WorkManager, kotlin.Function1((androidx.work.WorkInfo, kotlin.Unit)))me.proton.core.util.android.workmanager.activity/androidx.work.-work-request/observe-info.html
$dokka.location:me.proton.core.util.android.workmanager.fragment$doOnSuccess(androidx.work.WorkRequest, androidx.fragment.app.Fragment, androidx.work.WorkManager, kotlin.Function1((androidx.work.Data, kotlin.Unit)))me.proton.core.util.android.workmanager.fragment/androidx.work.-work-request/do-on-success.html
$dokka.location:me.proton.core.util.android.workmanager.fragment$doOnSuccess(androidx.work.WorkRequest, androidx.fragment.app.Fragment, androidx.work.WorkManager, kotlin.Function1((me.proton.core.util.android.workmanager.fragment.doOnSuccess.T, kotlin.Unit)))me.proton.core.util.android.workmanager.fragment/androidx.work.-work-request/do-on-success.html
$dokka.location:me.proton.core.util.android.workmanager.fragment$getWorkManager(androidx.fragment.app.Fragment)me.proton.core.util.android.workmanager.fragment/androidx.fragment.app.-fragment/get-work-manager.html
$dokka.location:me.proton.core.util.android.workmanager.fragment$observe(androidx.work.WorkRequest, androidx.fragment.app.Fragment, androidx.work.WorkManager, kotlin.Function1((androidx.work.Data, kotlin.Unit)), kotlin.Function0((kotlin.Unit)), kotlin.Function1((androidx.work.WorkInfo.State, kotlin.Unit)))me.proton.core.util.android.workmanager.fragment/androidx.work.-work-request/observe.html
$dokka.location:me.proton.core.util.android.workmanager.fragment$observe(androidx.work.WorkRequest, androidx.fragment.app.Fragment, androidx.work.WorkManager, kotlin.Function1((me.proton.core.util.android.workmanager.WorkRequestObserver, kotlin.Unit)))me.proton.core.util.android.workmanager.fragment/androidx.work.-work-request/observe.html
$dokka.location:me.proton.core.util.android.workmanager.fragment$observe(androidx.work.WorkRequest, androidx.fragment.app.Fragment, androidx.work.WorkManager, kotlin.Function1((me.proton.core.util.android.workmanager.fragment.observe.T, kotlin.Unit)), kotlin.Function0((kotlin.Unit)), kotlin.Function1((androidx.work.WorkInfo.State, kotlin.Unit)))me.proton.core.util.android.workmanager.fragment/androidx.work.-work-request/observe.html
$dokka.location:me.proton.core.util.android.workmanager.fragment$observeInfo(androidx.work.WorkRequest, androidx.fragment.app.Fragment, androidx.work.WorkManager, kotlin.Function1((androidx.work.WorkInfo, kotlin.Unit)))me.proton.core.util.android.workmanager.fragment/androidx.work.-work-request/observe-info.html
me.proton.core.util.android.workmanager
me.proton.core.util.android.workmanager.activity
me.proton.core.util.android.workmanager.fragment
