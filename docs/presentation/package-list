$dokka.format:html
$dokka.linkExtension:html
$dokka.location:me.proton.core.presentation.utils$clearText(android.widget.EditText)me.proton.core.presentation.utils/android.widget.-edit-text/clear-text.html
$dokka.location:me.proton.core.presentation.utils$errorSnack(android.view.View, kotlin.Int)me.proton.core.presentation.utils/android.view.-view/error-snack.html
$dokka.location:me.proton.core.presentation.utils$inTransaction(androidx.fragment.app.FragmentManager, kotlin.Function1((androidx.fragment.app.FragmentTransaction, )))me.proton.core.presentation.utils/androidx.fragment.app.-fragment-manager/in-transaction.html
$dokka.location:me.proton.core.presentation.utils$inflate(android.view.ViewGroup, kotlin.Int, kotlin.Boolean)me.proton.core.presentation.utils/android.view.-view-group/inflate.html
$dokka.location:me.proton.core.presentation.utils$onClick(android.view.View, kotlin.Function0((kotlin.Unit)))me.proton.core.presentation.utils/android.view.-view/on-click.html
$dokka.location:me.proton.core.presentation.utils$onItemSelected(android.widget.AdapterView((me.proton.core.presentation.utils.onItemSelected.T)), kotlin.Function1((kotlin.Int, kotlin.Unit)))me.proton.core.presentation.utils/android.widget.-adapter-view/on-item-selected.html
$dokka.location:me.proton.core.presentation.utils$onTextChange(android.widget.EditText, kotlin.Function1((kotlin.CharSequence, kotlin.Unit)))me.proton.core.presentation.utils/android.widget.-edit-text/on-text-change.html
$dokka.location:me.proton.core.presentation.utils$openBrowserLink(android.content.Context, kotlin.String)me.proton.core.presentation.utils/android.content.-context/open-browser-link.html
$dokka.location:me.proton.core.presentation.utils$snack(android.view.View, kotlin.Int, kotlin.Int)me.proton.core.presentation.utils/android.view.-view/snack.html
$dokka.location:me.proton.core.presentation.utils$snack(android.view.View, kotlin.String, kotlin.Int, kotlin.Int)me.proton.core.presentation.utils/android.view.-view/snack.html
$dokka.location:me.proton.core.presentation.utils$successSnack(android.view.View, kotlin.Int)me.proton.core.presentation.utils/android.view.-view/success-snack.html
me.proton.core.presentation.ui
me.proton.core.presentation.ui.adapter
me.proton.core.presentation.ui.view
me.proton.core.presentation.ui.webview
me.proton.core.presentation.utils
me.proton.core.presentation.viewmodel
