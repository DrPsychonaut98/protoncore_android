public class hilt_aggregated_deps/_me_proton_core_challenge_dagger_ChallengeModule {
	public fun <init> ()V
}

public final class me/proton/core/challenge/dagger/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public fun <init> ()V
}

public final class me/proton/core/challenge/dagger/ChallengeModule {
	public static final field INSTANCE Lme/proton/core/challenge/dagger/ChallengeModule;
	public final fun provideChallengeManagerProvider (Lme/proton/core/challenge/data/ChallengeManagerFactory;Lme/proton/core/network/domain/client/ClientIdProvider;)Lme/proton/core/challenge/domain/ChallengeManagerProvider;
	public final fun provideChallengeRepository (Lme/proton/core/challenge/data/db/ChallengeDatabase;)Lme/proton/core/challenge/domain/repository/ChallengeRepository;
}

public final class me/proton/core/challenge/dagger/ChallengeModule_ProvideChallengeManagerProviderFactory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;Ljavax/inject/Provider;)Lme/proton/core/challenge/dagger/ChallengeModule_ProvideChallengeManagerProviderFactory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/challenge/domain/ChallengeManagerProvider;
	public static fun provideChallengeManagerProvider (Lme/proton/core/challenge/data/ChallengeManagerFactory;Lme/proton/core/network/domain/client/ClientIdProvider;)Lme/proton/core/challenge/domain/ChallengeManagerProvider;
}

public final class me/proton/core/challenge/dagger/ChallengeModule_ProvideChallengeRepositoryFactory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;)Lme/proton/core/challenge/dagger/ChallengeModule_ProvideChallengeRepositoryFactory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/challenge/domain/repository/ChallengeRepository;
	public static fun provideChallengeRepository (Lme/proton/core/challenge/data/db/ChallengeDatabase;)Lme/proton/core/challenge/domain/repository/ChallengeRepository;
}

