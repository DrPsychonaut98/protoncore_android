public final class me/proton/core/observability/data/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public fun <init> ()V
}

public final class me/proton/core/observability/data/IsObservabilityEnabledImpl : me/proton/core/observability/domain/usecase/IsObservabilityEnabled {
	public fun <init> (Landroid/content/Context;Lme/proton/core/usersettings/domain/entity/DeviceSettings;)V
	public fun invoke (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class me/proton/core/observability/data/ObservabilityRepositoryImpl : me/proton/core/observability/domain/ObservabilityRepository {
	public fun <init> (Lme/proton/core/observability/data/db/ObservabilityDatabase;)V
	public fun addEvent (Lme/proton/core/observability/domain/entity/ObservabilityEvent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteAllEvents (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteEvent (Lme/proton/core/observability/domain/entity/ObservabilityEvent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteEvents (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getEventCount (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getEvents (Ljava/lang/Integer;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class me/proton/core/observability/data/db/ObservabilityDao : me/proton/core/data/room/db/BaseDao {
	public fun <init> ()V
}

public abstract interface class me/proton/core/observability/data/db/ObservabilityDatabase : me/proton/core/data/room/db/Database {
	public static final field Companion Lme/proton/core/observability/data/db/ObservabilityDatabase$Companion;
	public abstract fun observabilityDao ()Lme/proton/core/observability/data/db/ObservabilityDao;
}

public final class me/proton/core/observability/data/db/ObservabilityDatabase$Companion {
	public final fun getMIGRATION_0 ()Lme/proton/core/data/room/db/migration/DatabaseMigration;
}

public final class me/proton/core/observability/data/entity/ObservabilityEventEntity {
	public fun <init> (JLjava/lang/String;JJLjava/lang/String;)V
	public synthetic fun <init> (JLjava/lang/String;JJLjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()J
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()J
	public final fun component4 ()J
	public final fun component5 ()Ljava/lang/String;
	public final fun copy (JLjava/lang/String;JJLjava/lang/String;)Lme/proton/core/observability/data/entity/ObservabilityEventEntity;
	public static synthetic fun copy$default (Lme/proton/core/observability/data/entity/ObservabilityEventEntity;JLjava/lang/String;JJLjava/lang/String;ILjava/lang/Object;)Lme/proton/core/observability/data/entity/ObservabilityEventEntity;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ljava/lang/String;
	public final fun getId ()J
	public final fun getName ()Ljava/lang/String;
	public final fun getTimestamp ()J
	public final fun getVersion ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class me/proton/core/observability/data/usecase/SendObservabilityEventsImpl : me/proton/core/observability/domain/usecase/SendObservabilityEvents {
	public fun <init> (Lme/proton/core/network/data/ApiProvider;)V
	public fun invoke (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

