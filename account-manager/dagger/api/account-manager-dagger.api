public class hilt_aggregated_deps/_me_proton_core_accountmanager_dagger_AccountManagerBindModule {
	public fun <init> ()V
}

public class hilt_aggregated_deps/_me_proton_core_accountmanager_dagger_CoreAccountManagerModule {
	public fun <init> ()V
}

public abstract interface class me/proton/core/accountmanager/dagger/AccountManagerBindModule {
	public abstract fun bindAccountManager (Lme/proton/core/accountmanager/data/AccountManagerImpl;)Lme/proton/core/accountmanager/domain/AccountManager;
	public abstract fun bindAccountWorkflowHandler (Lme/proton/core/accountmanager/data/AccountManagerImpl;)Lme/proton/core/auth/domain/AccountWorkflowHandler;
}

public final class me/proton/core/accountmanager/dagger/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public fun <init> ()V
}

public final class me/proton/core/accountmanager/dagger/CoreAccountManagerModule {
	public static final field INSTANCE Lme/proton/core/accountmanager/dagger/CoreAccountManagerModule;
	public final fun provideAccountManagerImpl (Lme/proton/core/domain/entity/Product;Lme/proton/core/account/domain/repository/AccountRepository;Lme/proton/core/auth/domain/repository/AuthRepository;Lme/proton/core/user/domain/UserManager;)Lme/proton/core/accountmanager/data/AccountManagerImpl;
	public final fun provideAccountMigrator (Lme/proton/core/accountmanager/domain/AccountManager;Lme/proton/core/account/domain/repository/AccountRepository;Lme/proton/core/user/domain/repository/UserRepository;)Lme/proton/core/accountmanager/domain/migrator/AccountMigrator;
	public final fun provideAccountStateHandler (Lkotlinx/coroutines/CoroutineScope;Lme/proton/core/user/domain/UserManager;Lme/proton/core/accountmanager/domain/AccountManager;Lme/proton/core/account/domain/repository/AccountRepository;Lme/proton/core/accountmanager/domain/migrator/AccountMigrator;Lme/proton/core/domain/entity/Product;)Lme/proton/core/accountmanager/data/AccountStateHandler;
	public final fun provideAccountStateHandlerCoroutineScope ()Lkotlinx/coroutines/CoroutineScope;
	public final fun provideSessionListener (Lme/proton/core/account/domain/repository/AccountRepository;)Lme/proton/core/network/domain/session/SessionListener;
	public final fun provideSessionManager (Lme/proton/core/network/domain/session/SessionListener;Lme/proton/core/network/domain/session/SessionProvider;Lme/proton/core/auth/domain/repository/AuthRepository;)Lme/proton/core/accountmanager/domain/SessionManager;
	public final fun provideSessionProvider (Lme/proton/core/account/domain/repository/AccountRepository;)Lme/proton/core/network/domain/session/SessionProvider;
}

public final class me/proton/core/accountmanager/dagger/CoreAccountManagerModule_ProvideAccountManagerImplFactory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)Lme/proton/core/accountmanager/dagger/CoreAccountManagerModule_ProvideAccountManagerImplFactory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/accountmanager/data/AccountManagerImpl;
	public static fun provideAccountManagerImpl (Lme/proton/core/domain/entity/Product;Lme/proton/core/account/domain/repository/AccountRepository;Lme/proton/core/auth/domain/repository/AuthRepository;Lme/proton/core/user/domain/UserManager;)Lme/proton/core/accountmanager/data/AccountManagerImpl;
}

public final class me/proton/core/accountmanager/dagger/CoreAccountManagerModule_ProvideAccountMigratorFactory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)Lme/proton/core/accountmanager/dagger/CoreAccountManagerModule_ProvideAccountMigratorFactory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/accountmanager/domain/migrator/AccountMigrator;
	public static fun provideAccountMigrator (Lme/proton/core/accountmanager/domain/AccountManager;Lme/proton/core/account/domain/repository/AccountRepository;Lme/proton/core/user/domain/repository/UserRepository;)Lme/proton/core/accountmanager/domain/migrator/AccountMigrator;
}

public final class me/proton/core/accountmanager/dagger/CoreAccountManagerModule_ProvideAccountStateHandlerCoroutineScopeFactory : dagger/internal/Factory {
	public fun <init> ()V
	public static fun create ()Lme/proton/core/accountmanager/dagger/CoreAccountManagerModule_ProvideAccountStateHandlerCoroutineScopeFactory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lkotlinx/coroutines/CoroutineScope;
	public static fun provideAccountStateHandlerCoroutineScope ()Lkotlinx/coroutines/CoroutineScope;
}

public final class me/proton/core/accountmanager/dagger/CoreAccountManagerModule_ProvideAccountStateHandlerFactory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)Lme/proton/core/accountmanager/dagger/CoreAccountManagerModule_ProvideAccountStateHandlerFactory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/accountmanager/data/AccountStateHandler;
	public static fun provideAccountStateHandler (Lkotlinx/coroutines/CoroutineScope;Lme/proton/core/user/domain/UserManager;Lme/proton/core/accountmanager/domain/AccountManager;Lme/proton/core/account/domain/repository/AccountRepository;Lme/proton/core/accountmanager/domain/migrator/AccountMigrator;Lme/proton/core/domain/entity/Product;)Lme/proton/core/accountmanager/data/AccountStateHandler;
}

public final class me/proton/core/accountmanager/dagger/CoreAccountManagerModule_ProvideSessionListenerFactory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;)Lme/proton/core/accountmanager/dagger/CoreAccountManagerModule_ProvideSessionListenerFactory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/network/domain/session/SessionListener;
	public static fun provideSessionListener (Lme/proton/core/account/domain/repository/AccountRepository;)Lme/proton/core/network/domain/session/SessionListener;
}

public final class me/proton/core/accountmanager/dagger/CoreAccountManagerModule_ProvideSessionManagerFactory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)Lme/proton/core/accountmanager/dagger/CoreAccountManagerModule_ProvideSessionManagerFactory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/accountmanager/domain/SessionManager;
	public static fun provideSessionManager (Lme/proton/core/network/domain/session/SessionListener;Lme/proton/core/network/domain/session/SessionProvider;Lme/proton/core/auth/domain/repository/AuthRepository;)Lme/proton/core/accountmanager/domain/SessionManager;
}

public final class me/proton/core/accountmanager/dagger/CoreAccountManagerModule_ProvideSessionProviderFactory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;)Lme/proton/core/accountmanager/dagger/CoreAccountManagerModule_ProvideSessionProviderFactory;
	public synthetic fun get ()Ljava/lang/Object;
	public fun get ()Lme/proton/core/network/domain/session/SessionProvider;
	public static fun provideSessionProvider (Lme/proton/core/account/domain/repository/AccountRepository;)Lme/proton/core/network/domain/session/SessionProvider;
}

