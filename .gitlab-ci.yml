image: ${CI_REGISTRY}/android/shared/docker-android:v1.0.0-alpha08

include:
  - project: 'agarroux/publish-github'
    ref: master
    file: '/jobs/release.gitlab-ci.yml'

  - project: 'translations/generator'
    ref: master
    file: '/jobs/sync-crowdin.gitlab-ci.yml'

  - project: 'translations/generator'
    ref: master
    file: '/jobs/commit-locales.gitlab-ci.yml'

  - project: 'ProtonVPN/android/android-app-new'
    ref: development
    file: '/appetize-integration.yml'

  - project: 'proton/devops/atlas-deploy'
    ref: 'master'
    file: '/deploy-to-atlas.gitlab-ci.yml'

  - local: '/ci/templates/.gitlab-ci-git.yml'

  - local: '/ci/templates/base-job.gitlab-ci.yml'

stages:
  - bot
  - analyze
  - build
  - test
  - publish

variables:
  # Use fastzip to improve cache times
  FF_USE_FASTZIP: "true"
  # Output upload and download progress every 5 seconds
  TRANSFER_METER_FREQUENCY: "5s"
  # Use no compression for artifacts
  ARTIFACT_COMPRESSION_LEVEL: "fastest"
  # Use low compression for caches
  CACHE_COMPRESSION_LEVEL: "fast"

#####################
danger-review:
  extends: .ruby-job
  stage: .post
  when: always
  script:
    - bundle exec danger --fail-on-errors=false
  allow_failure: true
  variables:
    DANGER_GITLAB_API_TOKEN: $DANGER_GITLAB_API_TOKEN
  interruptible: true

deploy atlas:
  stage: build
  needs: [ "prepare environment" ]
  extends: .deploy:black
  allow_failure: true

prepare environment:
  stage: analyze
  when: always
  cache: [ ]
  variables:
    NAMESERVICE_URL: "https://nameservice.$ATLAS_BASE_DOMAIN/api/env"
    REQUEST_DATA: "--header 'Content-Type:application/x-www-form-urlencoded' --data app=${CI_PROJECT_PATH} --data branch=${CI_COMMIT_REF_NAME} --data tag=${CI_COMMIT_REF_SLUG}"
  script:
    - apt-get -qq update
    - apt-get install -y jq
    - echo PROXY_TOKEN="$(curl -o - https://proxy.$ATLAS_BASE_DOMAIN/token/get)" >> local.properties
    - echo HOST="$(curl --request POST --url $NAMESERVICE_URL $REQUEST_DATA | jq -r '.envName')".$ATLAS_BASE_DOMAIN >> local.properties
    - mkdir -p coreexample/src/androidTest/assets/sensitive
    - cat $TEST_USERS > coreexample/src/androidTest/assets/sensitive/users.json
    - cat $TEST_INTERNAL_API > coreexample/src/androidTest/assets/sensitive/internal_apis.json
  artifacts:
    paths:
      - coreexample/src/androidTest/assets/sensitive
      - local.properties

cleanup atlas:
  stage: .post
  extends: .cleanup:black
  when: manual

detekt analyze:
  extends: .gradle-job
  stage: analyze
  when: always
  interruptible: true
  script:
    - ./gradlew multiModuleDetekt
  artifacts:
    expire_in: 1 month
    reports:
      codequality: config/detekt/reports/mergedReport.json

assemble:
  extends: .gradle-job
  stage: build
  tags:
    - large
  interruptible: true
  script:
    - ./gradlew :coreexample:assembleLocalPropertiesDebug
    - ./gradlew :coreexample:assembleLocalPropertiesDebugAndroidTest
  artifacts:
    paths:
      - coreexample/build/outputs/

uiTests:
  stage: test
  when: always
  allow_failure: true
  trigger:
    strategy: depend
    include:
      - local: coreexample/ci/test.coreexample.uitests.yml
  variables:
    PARENT_PIPELINE_ID: $CI_PIPELINE_ID

release-publish-github:
  stage: publish
  tags:
    - small
  only:
    - main
  variables:
    RELEASE_SYNC_PUBLIC_URL: git@github.com:ProtonMail/protoncore_android.git
    RELEASE_SYNC_TO_BRANCH: 'main'
    RELEASE_SYNC_FROM_BRANCH: 'main'
  extends: .release-sync-commit-shared

publish-libs:
  extends: .gradle-job
  stage: publish
  tags:
    - large
  variables:
    ORG_GRADLE_PROJECT_mavenCentralUsername: $MAVEN_USER
    ORG_GRADLE_PROJECT_mavenCentralPassword: $MAVEN_PASSWORD
    ORG_GRADLE_PROJECT_signingInMemoryKey: $MAVEN_SIGNING_KEY
    ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: $MAVEN_SIGNING_KEY_PASSWORD
    ORG_GRADLE_PROJECT_androidDevChannelWebhook: $ANDROID_DEVS_CHANNEL_WEBHOOK
  script:
    - ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository
    - ./gradlew notifyNewRelease
  only:
    - /^release\/libs\/.*/ # stable release with notification
    - main # main-snapshot release without notification

tag-libs-release:
  extends: .gradle-job
  stage: publish
  needs:
    - job: publish-libs
  only:
    - /^release\/libs\/.*/
  tags:
    - large
  before_script:
    - !reference [ .git, before_script ]
  script:
    - ./gradlew tagRelease

publish-gradle-plugins:
  extends: .gradle-job
  stage: publish
  tags:
    - large
  variables:
    ORG_GRADLE_PROJECT_mavenCentralUsername: $MAVEN_USER
    ORG_GRADLE_PROJECT_mavenCentralPassword: $MAVEN_PASSWORD
    ORG_GRADLE_PROJECT_signingInMemoryKey: $MAVEN_SIGNING_KEY
    ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: $MAVEN_SIGNING_KEY_PASSWORD
  script:
    - ./gradlew -p plugins publishToSonatype closeAndReleaseSonatypeStagingRepository
  only:
    - /^release\/gradle-plugins\/.*/ # stable release
    - main # main-snapshot release

tag-gradle-plugins-release:
  extends: .gradle-job
  stage: publish
  needs:
    - job: publish-gradle-plugins
  only:
    - /^release\/gradle-plugins\/.*/
  tags:
    - large
  before_script:
    - !reference [ .git, before_script ]
  script:
    - ./gradlew -p plugins tagRelease

i18n-sync-crowdin:
  extends: .i18n-sync-crowdin-common
  variables:
    I18N_SYNC_CROWDIN_PROJECT: 'android-core'
    I18N_SYNC_BRANCH: 'main'
    I18N_FILTER_OUT_ITEMS: 'coreexample'

i18n-commit-locales:
  extends: .i18n-commit-locales-shared
  variables:
    I18N_COMMIT_CROWDIN_PROJECT: 'android-core'
    I18N_COMMIT_BRANCH_PUSH: 'main'
    I18N_COMMIT_BRANCH_ALLOWED: 'main'

startReview:
  before_script:
    - export REVIEW_APP_ARTIFACT_PATH="coreexample/build/outputs/apk/localProperties/debug/coreexample-localProperties-debug.apk"
  extends: .startReview
  stage: test

stopReview:
  extends: .stopReview

coverage report:
  extends: .gradle-job
  stage: test
  tags:
    - large
  script:
    - ./gradlew -Pci --console=plain coberturaCoverageReport # This also runs allTest
  coverage: /Total.*?(\d{1,3}\.\d{0,2})%/
  interruptible: true
  artifacts:
    expire_in: 1 week
    paths:
      - ./build/reports/*
    reports:
      cobertura:
        - ./build/reports/cobertura-coverage.xml
